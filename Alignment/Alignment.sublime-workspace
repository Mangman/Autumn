{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ma",
				"matrixPrint"
			],
			[
				"al",
				"aligned2"
			],
			[
				"pr",
				"print"
			],
			[
				"m",
				"matrix"
			],
			[
				"lef",
				"left"
			],
			[
				"s",
				"s2"
			],
			[
				"_ini",
				"_initLocal"
			],
			[
				"trac",
				"tracePrint"
			],
			[
				"tra",
				"trace"
			],
			[
				"len",
				"len1"
			],
			[
				"fro",
				"formatedMatrix"
			],
			[
				"for",
				"formatedMatrix"
			],
			[
				"j",
				"j"
			],
			[
				"max",
				"maximum"
			],
			[
				"se",
				"Searcher\tclass"
			],
			[
				"ge",
				"gene"
			],
			[
				"v",
				"visitedVerticies"
			],
			[
				"ve",
				"vertex"
			],
			[
				"c",
				"current"
			],
			[
				"a",
				"append"
			],
			[
				"tr",
				"transpose"
			],
			[
				"clus",
				"clusterLen"
			],
			[
				"sra",
				"startVertex"
			],
			[
				"in",
				"index"
			],
			[
				"seco",
				"secondRead"
			],
			[
				"fisr",
				"firstRead"
			],
			[
				"__",
				"__init__"
			],
			[
				"re",
				"reads"
			],
			[
				"fin",
				"findLongestCrossing"
			],
			[
				"crossi",
				"crossingPart"
			],
			[
				"cro",
				"crossingPart"
			],
			[
				"lon",
				"longestShift"
			],
			[
				"fir",
				"firstLen"
			],
			[
				"firs",
				"firstRead"
			],
			[
				"rand",
				"randomPiece"
			],
			[
				"random",
				"randomPiece"
			],
			[
				"tem",
				"tempCompleteRead"
			],
			[
				"en",
				"endLine_"
			],
			[
				"lo",
				"longestCrossing"
			],
			[
				"star",
				"startRead"
			],
			[
				"read",
				"read"
			],
			[
				"Co",
				"completeRead"
			],
			[
				"long",
				"longestCrossingPart"
			],
			[
				"co",
				"completeRead"
			],
			[
				"f",
				"file"
			],
			[
				"gene",
				"gene"
			],
			[
				"negativ",
				"negativeClusters"
			],
			[
				"n",
				"names"
			],
			[
				"nega",
				"searchNegative"
			],
			[
				"w",
				"write"
			],
			[
				"file",
				"file"
			],
			[
				"fiel",
				"filePath"
			],
			[
				"sea",
				"searchOriented"
			],
			[
				"searc",
				"searchNegative"
			],
			[
				"inc",
				"incomingDegrees"
			],
			[
				"find",
				"findChains"
			],
			[
				"cha",
				"chain"
			],
			[
				"_",
				"_findChains"
			],
			[
				"chain",
				"chains"
			],
			[
				"g",
				"graph"
			],
			[
				"out",
				"outputFile"
			],
			[
				"clu",
				"clusterLen"
			],
			[
				"sta",
				"startVertex"
			],
			[
				"com",
				"component"
			],
			[
				"st",
				"startVertex"
			],
			[
				"an",
				"analyseDataAndFindSickGenes"
			],
			[
				"ou",
				"outcomeSickGenes"
			],
			[
				"o",
				"outcomeTreshold"
			],
			[
				"income",
				"IncomeSickGenes"
			],
			[
				"de",
				"degrees"
			],
			[
				"d",
				"degree"
			],
			[
				"sq",
				"squareDeviation"
			],
			[
				"show",
				"showHistograms"
			],
			[
				"fil",
				"fillDependencies"
			],
			[
				"fi",
				"filePath"
			],
			[
				"e",
				"edges"
			],
			[
				"l",
				"lines"
			],
			[
				"to",
				"topMin"
			],
			[
				"tom",
				"topMin"
			],
			[
				"we",
				"write"
			],
			[
				"sor",
				"sortedValues"
			],
			[
				"di",
				"differences"
			],
			[
				"top",
				"topMin"
			],
			[
				"so",
				"sortedValues"
			],
			[
				"dif",
				"differences"
			],
			[
				"ke",
				"key"
			],
			[
				"res",
				"result"
			],
			[
				"gee",
				"geneList"
			],
			[
				"exon",
				"exonCoords"
			],
			[
				"exo",
				"exonCoords"
			],
			[
				"this",
				"thisLeft"
			],
			[
				"ex",
				"exonCoords"
			],
			[
				"le",
				"leftSide"
			],
			[
				"result",
				"results"
			],
			[
				"col",
				"column"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\nfrom StepanBioUtilities import matrixPrint\n\n#TODO: наследование?\nclass AlignmentMatrix :\n\tmatrix = []\n\ttrace  = []\n\n\tisGlobal = 1\n\n\ts1 = \"\"\n\ts2 = \"\"\n\n\tlen1 = -1\n\tlen2 = -1\n\n\tdef __init__(self, isGlobal , s1, s2) :\n\t\tself.s1 = s1\n\t\tself.s2 = s2 \n\n\t\tself.len1 = len(self.s1)\n\t\tself.len2 = len(self.s2)\n\n\t\tself.isGlobal = isGlobal\n\n\t\t#  Заполняем матрицы экзистенциальной пустотой\n\t\tfor i in range (self.len2+1) :\n\t\t\tself.matrix.append(list())\n\t\t\tself.trace.append(list())\n\t\t\n\t\t#  Трейс нулями, чтобы не аппендить потом\n\t\tfor i in range (self.len2+1) :\n\t\t\tfor j in range (self.len1+1):\n\t\t\t\tself.trace[i].append(0)\n\n\t\t#  Верхняя строка трейса заполняется единицами для возвращения в начальную точку\n\t\tself.trace[0] = [0]+[1]*(self.len1)\n\t\t\n\t\t#  Первоначальные значения матриц\n\t\tif self.isGlobal : self._initGlobal()\n\t\telse : self._initLocal()\n\t\t\n\t\tself._fillMatrix()\n\n\tdef _initGlobal (self) :\n\t\tfor i, value in zip(range(1, self.len2+1), range(-self.len2, 0)[::-1]) :\n\t\t\tself.matrix[i].append(value)\n\t\t\tself.trace[i][0] = 3\n\t\tself.matrix[0] = range(-self.len1, 0+1)[::-1]\n\n\tdef _initLocal (self) :\n\t\tfor i in range(1, self.len2+1) :\n\t\t\tself.matrix[i].append(0)\n\t\t\tself.trace[i][0] = 3\n\t\tself.matrix[0] = [0]*(self.len1+1)\n\t\n\n\tdef _fillMatrix(self) :\n\t\tfor i in range (1, self.len2+1) :\n\t\t\tfor j in range (1, self.len1+1) :\n\t\t\t\t\n\t\t\t\tleft = self.matrix[i][j-1]\n\t\t\t\tupper = self.matrix[i-1][j]\n\t\t\t\tleftUpper = self.matrix[i-1][j-1]\n\n\t\t\t\t#  Выбор наибольшего значения из предыдущих для оптимального пути\n\t\t\t\tmaximum = max([left, upper, leftUpper])\n\t\t\t\tdelta = 0\n\n\t\t\t\t#  Штраф за мисматч и индел -1, за совпадение +1\n\t\t\t\tif leftUpper == maximum :\n\t\t\t\t\tif self.s1[j-1] == self.s2[i-1] :\n\t\t\t\t\t\tdelta = +1\n\t\t\t\t\telse :\n\t\t\t\t\t\tdelta = -1\n\t\t\t\t\tself.trace[i][j] = 2\n\t\t\t\telif left == maximum :\n\t\t\t\t\tdelta = -1\n\t\t\t\t\tself.trace[i][j] = 1\n\t\t\t\telif upper == maximum :\n\t\t\t\t\tdelta = -1\n\t\t\t\t\tself.trace[i][j] = 3\n\n\t\t\t\tnewValue = maximum+delta\n\t\t\t\tif self.isGlobal != 1 :\n\t\t\t\t\tif newValue < 0 : \n\t\t\t\t\t\tnewValue = 0\n\t\t\t\t\t\tself.trace[i][j] = 0\n\n\t\t\t\tself.matrix[i].append(newValue)\n\n\t#Нормально сделать\n\tdef alignReads(self):\n\t\ti = self.len2\n\t\tj = self.len1\n\n\t\taligned1 = \"\"\n\t\taligned2 = \"\"\n\n\t\twhile (i != 0 and j != 0) :\n\t\t\tpath = self.trace[i][j]\n\t\t\tif path == 2 :\n\t\t\t\taligned2 += self.s2[i-1]\n\t\t\t\taligned1 += self.s1[j-1]\n\t\t\t\ti = i-1\n\t\t\t\tj = j-1 \n\t\t\telif path == 1 :\n\t\t\t\taligned2 += '-'\n\t\t\t\taligned1 += self.s1[j-1]\n\t\t\t\tj = j-1\n\t\t\telif path == 3 :\n\t\t\t\taligned1 += '-'\n\t\t\t\taligned2 += self.s2[i-1]\n\t\t\t\ti = i-1\n\t\t\telif path == 0 :\n\t\t\t\tbreak\n\n\t\treturn (aligned1[::-1], aligned2[::-1])\n\ns1 = \"ACCCAAAAACCACACCCCTCCTTGGGAGAATCCCCTAGATCACAGCTCCTCACCATGGACTGGACCTGGAGCATCCTTTTCTTGGTGGCAGCAGCAACAGGTGCCCACTCCCAGGTTCAGCTGGTGCAGTCTGGAGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACACCTTTACCAGCTATGGTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAGCGCTTACAATGGTAACACAAACTATGCACAGAAG\"\ns2 = \"AGAGGAAGTCCTGTGCGAGGCAGCCAACGGCCACGCTGCTCGTATCCGACGGGGAATTCTCACAGGAGACGAGGGGGAAAAGGGTTGGGGCGGATGCACTCCCTGAGGAGACGGTGACCAGGGTTCCCTGGCCCCAGTAGTCGGCGGGCTCCCCGCCGACACAGTAATCCACGGCCGTGTCGTCAGATCTCAGGCTCCTCAGCTCCATGTAGGCTGTGCCCGTGGATGTGTCTGTGGTCATGGTGACTCTGCCCTGGACCTTCTGTGCCTAGTTTGTGTTACCATTGTAAGCGCTGACCC\"\na = AlignmentMatrix(0, s1, s2)\n#matrixPrint(a.matrix, a.s1, a.s2)\nres = a.alignReads()\nprint res[0]\nprint res[1]",
			"file": "Alignment1.py",
			"file_size": 3590,
			"file_write_time": 131223323500000000,
			"settings":
			{
				"buffer_size": 3340,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nToDone\n------\n\n  \n  \n  #\n  #\tNOTE: A restart is required after installation.\n  #\n  \n  \n  This document details the syntax. Left-aligned texts are considered headings.\n  \n  /*\n  \tOffset headings can be created by enclosing text in forward-slashes\n  \tand asterisks\n  */\n  \n  \n  Getting started\n  -\tCreate a task by adding a '-' in front of it\n  ----\tAdd hyphens to change the color\n  \t-----\t5 looks urgent\n  \t----\t4 for important items\n  \t---\t3 for the middle\n  \t--\t2 for the pretty light stuff\n  \t-\t1 for the low-priority or easy stuff\n  -4\tAlternatively, you can add a number after one hyphen\n  \t-3\tThis starts with a `-3`\n  \t-2\t`-2` is the same `--`\n  \t-1\tetc...\n  \t-\tThis is new in 1.0.5\n  \n  \n  Notes\n  -3\tA task can have notes: by adding a ':' then add text\n  -3\tOr by adding the notes under the task\n  \tLike these notes. Notes can have `emphasis` by adding slanted quotes.\n  \n  \n  Sub-tasks\n  -4\tA task can have sub-tasks\n  \t-2\tSub tasks are indented\n  \t-1\tAnd they can have: notes - just like any task\n  \t\t-3\tOr 3rd level sub-tasks\n  \t\t\tWith notes underneath\n  \n  \n  Completed items have a '+'\n  +-2\tThis item is finished because it starts with a'+'\n  \t-3\tThis sub-task is finished bc it's parent is\n  -2\tCompletion applies to sub-tasks\n  -3\tUse the keys `cmd /` shortcut to toggle completion\n  \tIt's just like toggling a comment\n  \n  \n  State of emergency\n  !-3\tEmergency / Disaster: This item is in a state of emergency.\n  \tIt's in the emergency state because of the `leading exclamation mark`.\n  \t----\tThe emergency will apply to any sub-tasks\n  \t--\tLike these two\n  +!--\tA completed emergency task\n  \tThis emergency item was handled.\n  \n  \n  Ignored tasks by adding a leading '.'\n  .--\tThis item is ignored because it starts with a `period`\n  ----\tIgnoring applies to sub-tasks\n  \t.---\tThis sub-task is ignored\n  \t\t---\tThis sub-sub-task is ignored bc its parent is\n  --\tInclude a reason for ignoring it\n  .----\t(Reason for ignoring) Ignored items can have a note in parentheses\n  \tso you can save a note indicating why it's being ignored\n  \n  \n  The symbol list\n  ----\tTo skim current tasks\n  \tuse the `cmd r` shortcut to see an outline (notes are omited)\n  \n  \n  Hard-tabs at 8-width or 5-width\n  ----\tA hard-tab at 8-space width AFTER the '-'s\n  \t`Why?`\n  \t\tThe task titles will always line up.\n  \t`Why hard-tabs?`\n  \t\tThe alignment of the title won't re-adjust when you change\n  \t\tthe number of dashes, add an exclamation mark or plus-sign.\n  \t`Why 8-space width?`\n  \t\t8 is the right number because there is a max of 7 token characters\n  \t\tthat might precede the task-title. 7 because you can have up\n  \t\tto `5` dashes + `1` exclamation mark + `1` plus-sign. Tabs\n  \t\tthat are `8` spaces wide allows there to always be at least one\n  \t\tan extra space between the tokens and the task title:\n  \t+!-----\tA title here\n  \t--\tA title here\n  \t\t^ `sweet alignment`\n  \n  -4\tAlternatively, Hard-tabs at 5-space width\n  \tIf the `-4` pattern is used then 5 characters allows for:\n  \t-\t`+` or `.`  token\n  \t-\t! token\n  \t-\t- token\n  \t-\tA number\n  \t-\tA final space to separate the title\n  \t.!-4\t(for example)\n  \t-3\tThe default Tab Size can be changed via the menu option:\n  \t\t-\tSublime Text\n  \t\t-\tPreferences\n  \t\t-\tPackage Settings\n  \t\t-\tToDone\n  \t\t-\tSettings - User\n  \t\t-2\tAnd adding the following to the file: `\n  \t\t\t{\n  \t\t\t    // The number of spaces a tab is considered equal to\n  \t\t\t    \"tab_size\": 5\n  \t\t\t}`\n  \n  \n  More expressive notes\n  ---\tIf you need more complex notes: ///\n  \tAn `explicit note` is started by the `///` characters.\n  \tAn explicit note can have lines that start with a `-` or `+`.\n  \tExplicit notes end when another `///` is encountered.\n  #\tWhitespace is ignored\n  \t- some simple notes\n  \t- that aren't considered tasks\n  \t- but are a list\n  \t///\n",
			"settings":
			{
				"buffer_size": 3825,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "/Users/admin/GoTo/autumn/summer2016/progress/projects/Team1/StepanMarvelousPrograms/Graph/Graph.py",
			"settings":
			{
				"buffer_size": 9303,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "1.fq",
			"settings":
			{
				"buffer_size": 12568041,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "2.fq",
			"settings":
			{
				"buffer_size": 12568041,
				"line_ending": "Unix"
			}
		},
		{
			"file": "StepanBioUtilities.py",
			"settings":
			{
				"buffer_size": 991,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "packa",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/admin/GoTo/autumn/summer2016/progress/projects/Team1/StepanMarvelousPrograms/Graph/Graph.py",
		"/Users/admin/GoTo/autumn/summer2016/progress/Stepan/x2Python/x2.py",
		"/Users/admin/GoTo/autumn/autumn2016/data/alignment/2.fq",
		"/Users/admin/GoTo/autumn/autumn2016/data/alignment/1.fq",
		"/Users/admin/Coding/Pythonishe/GotoStuff/Autumn/Alignment/Alignment1.py",
		"/Users/admin/Coding/Pythonishe/GotoStuff/First/GotoBioTask_One.py",
		"/Users/admin/PythonStuff/GotoStuff/Second/graphFormat.py",
		"/Users/admin/PythonStuff/GotoStuff/Second/Second.py",
		"/Users/admin/PythonStuff/GotoStuff/Second/graphAnalyser.py",
		"/var/folders/hq/0jd2k3w11s9854bwd92y656h0000gn/T/tmpzmf_24.txt",
		"/var/folders/hq/0jd2k3w11s9854bwd92y656h0000gn/T/tmp734t9a.txt",
		"/Users/admin/GoTo/Bio/progress/projects/Team1/StepanMarvelousPrograms/Graph/Graph.py",
		"/Users/admin/PythonStuff/GotoStuff/Second/chromosomes.kekesmekes",
		"/Users/admin/PythonStuff/GotoStuff/Second/graphResult.lel",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/Graph.py",
		"/Users/admin/PythonStuff/GotoStuff/Second/keke.py",
		"/Users/admin/PythonStuff/GotoStuff/Second/graphRes.lel",
		"/Users/admin/PythonStuff/GotoStuff/First/GotoBioTask_Final.py",
		"/Users/admin/PythonStuff/GotoStuff/Second/graph.lel",
		"/Users/admin/PythonStuff/GotoStuff/Second/easy23.fa",
		"/Users/admin/GoTo/Bio/progress/projects/Team1/StepanMarvelousPrograms/Graph/keks.py",
		"/Users/admin/Downloads/easy23 (1).fa",
		"/Users/admin/GitHub/ScheduleAppData/teachers.json",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/dullClusters.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/directedClusters.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/indirectedClusters.lal",
		"/Users/admin/GoTo/Bio/progress/projects/Team1/StepanMarvelousPrograms/Graph/componentaClusters.lal",
		"/Users/admin/GoTo/Bio/progress/projects/Team1/StepanMarvelousPrograms/Graph/f.txt",
		"/Users/admin/GoTo/Bio/progress/projects/Team1/StepanMarvelousPrograms/Graph/orientedindianClusters.lal",
		"/Users/admin/GoTo/Bio/progress/projects/Team1/StepanMarvelousPrograms/Graph/negativeClusters.lal",
		"/Users/admin/GoTo/Bio/data/cancer_network/Cancer_LUAD_Network.txt",
		"/Users/admin/GoTo/Bio/progress/projects/Team1/StepanMarvelousPrograms/Graph/dullClusters.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/fff.py",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/Ilya.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/orientedClusters.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/OutcomeSickGenes.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/IncomeSickGenes.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/CancerProject.py",
		"/Users/admin/GoTo/Bio/progress/Stepan/GeneCount/PolyplusH1.22chr.sorted.sam",
		"/Users/admin/GoTo/Bio/progress/Stepan/Graph/HumanNet.txt",
		"/Users/admin/GoTo/Bio/progress/Stepan/GeneCount/GeneCount.py",
		"/Users/admin/GoTo/Bio/progress/Stepan/GeneCount/result.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/GeneCount/stepanultramegaproject1337228666699663224201488noscopeblazeitpapayamangograpefruitstarminatorpowerrangers2007.py",
		"/Users/admin/GoTo/Bio/progress/Stepan/GeneCount/topMin.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/GeneCount/topMax.lal",
		"/Users/admin/GoTo/Bio/progress/Stepan/stepanultramegaproject1337228666699663224201488noscopeblazeitpapayamangograpefruitstarminatorpowerrangers2007",
		"/Users/admin/GoTo/Bio/progress/Stepan/x2.py",
		"/Users/admin/Desktop/x2.py",
		"/Users/admin/Desktop/IraBioData/data/Homo_sapiens.38.22chr.genes.gtf",
		"/Users/admin/GoTo/Bio/progress/Stepan/x3.py",
		"/Users/admin/Desktop/xx2.py",
		"/Users/admin/GoTo/Bio/progress/Stepan/lal.py",
		"/Users/admin/Desktop/xX2.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"MOOCCPCGMTCMMTMMMTGGOGG",
			"OCCPCGMTCMMTMMMTGGOGGMO",
			"CPCGMTCMMTMMMTGGOGGMOTC",
			"PCGMTCMMTMMMTGGOGGMOTCM",
			"MTCMMTMMMTGGOGGMOTCMMCC",
			"MTCMMTMMMTGGOGGMOTCMMCCMTCMMTMMMTGGOGGMOTCMMCC",
			"MTCMMTMMMTGGOGGMOTCMMCC",
			"OOOPMMPOGMOPPTMTGGPGTTG",
			"PCGMTCMMTMMMTGGOGGMOTCM",
			"GOGCTPMTOOPGPOGPCTPGTPP",
			"POOGOGCTPMTOOPGPOGPCTPG",
			"GPOGPCTPG",
			"MTOO",
			"LOOKatme",
			"pri",
			"GPPOCGCMTOOPTCPM",
			"GPPOCGCMTOOPTCP",
			"GPPOCGCMTOOPTCPM\t",
			"GPPOCGCMTOOPTC",
			"OOPTC\t",
			"look",
			"LOOK",
			"OPMMPOGMOPPTMTGGPGTTGOC",
			"TOOPPPOGPTPTPTPTGOTTOTT",
			"PTGGGPMGMMGGTGMOOMOCGMT",
			",",
			"pop",
			"ENSG00000187837",
			"ENSG00000164151",
			"ENSG00000164151\t",
			"ENSG00000164190",
			"ENSG00000278730",
			"ENSG00000279095",
			"3394736",
			"blank",
			"'')"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Alignment1.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3340,
						"regions":
						{
						},
						"selection":
						[
							[
								354,
								354
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3825,
						"regions":
						{
						},
						"selection":
						[
							[
								3825,
								3825
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/admin/GoTo/autumn/summer2016/progress/projects/Team1/StepanMarvelousPrograms/Graph/Graph.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9303,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3524.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "1.fq",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12568041,
						"regions":
						{
						},
						"selection":
						[
							[
								331,
								31
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "2.fq",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12568041,
						"regions":
						{
						},
						"selection":
						[
							[
								31,
								331
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "StepanBioUtilities.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 991,
						"regions":
						{
						},
						"selection":
						[
							[
								54,
								54
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 119.0
	},
	"output.figlet_preview":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Alignment.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
